esphome:
  name: "fermenter1"
  platform: ESP8266
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fermenter1 Fallback Hotspot"
    password: !secret wifi_backup_password

captive_portal:

switch:
  - platform: gpio
    name: "Fermenter LED"
    inverted: true
    pin: D0
  - platform: gpio
    id: fan_power
    name: "Fermenter Fan Power"
    pin: D5

# pin D3 may be fried on this NodeMCU
dallas:
  - pin: D4
    update_interval: 5s

sensor:
  - name: "Fermenter temperature"
    id: fermenter_temp
    platform: dallas
    index: 0
  #- platform: pulse_counter
  #  pin: D6
  #  id: fermenter_fan_rpm
  #  name: "Fermenter Fan RPM"
  #  update_interval: 5s
  #  filters:
  #    - multiply: 0.5 # 2 pulses per revolution

# Kegerator thermostat
climate:
  - name: "Fermenter thermostat"
    id: fermenter_thermostat
    default_preset: home
    platform: thermostat
    visual:
      min_temperature: -1
      max_temperature: 40
      temperature_step: 1
    sensor: fermenter_temp    
    preset:
      # Standard presets
      - name: home
        mode: cool
        default_target_temperature_high: 15
    cool_deadband: 0.1
    cool_overrun: 0.1
    min_cooling_off_time: 1s
    min_cooling_run_time: 1s
    min_idle_time: 1s
    cool_action:
      - switch.turn_on: fan_power
    idle_action:
      - switch.turn_off: fan_power

i2c:
  sda: D2
  scl: D1

display:
  - platform: lcd_pcf8574
    dimensions: 16x2
    address: 0x27
    lambda: |-
      it.print(0,0,"BT Fermenter");
      it.printf(0,1,"Temp:%.1fF/%.1fF", (id(fermenter_temp).state) * 9 / 5 + 32, (id(fermenter_thermostat).target_temperature) * 9 / 5 + 32);
